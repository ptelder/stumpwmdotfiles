#+TITLE: StumpWM Configuration
#+AUTHOR: Kenneth W Brown III
#+PROPERTY: header-args    :tangle yes

This is my first stab at getting StumpWM up and comfy.

* Package declaration

#+BEGIN_SRC lisp 

(in-package :stumpwm)

#+END_SRC

* Welcome Message

Using fortune, but Stump isn't using the normal conventions for escape sequences. More research will be needed. For now, restricting Fortune to 120 characters should keep things from getting too messy. 

#+BEGIN_SRC lisp 

(setf *startup-message*         
  (format nil "~{~A~^ ~}" 
    (let ((p (sb-ext:run-program "/usr/bin/fortune" '("-as" "-n 120") :output :stream)))
      (when p
        (unwind-protect
          (with-open-stream (o (sb-ext:process-output p))
            (loop
              :for line := (read-line o nil nil)
              :while line
              :collect line))
          (sb-ext:process-close p))))))
#+END_SRC

* TODO Swank & Slime

Grabbed a snippet from Emacs Wiki. Needs a bit of cleanup and magic to 
autodetect the location of Slime rather than the hardcode which will break
badly on updates.

#+BEGIN_SRC lisp

(load "/home/pliny/.emacs.d/elpa/slime-20160521.915/swank-loader.lisp")
(swank-loader:init)
(defcommand swank () ()
    (swank:create-server :port 4005
                       :style swank:*communication-style*
                       :dont-close t)
  (echo-string (current-screen) 
	       "Starting swank. M-x slime-connect RET RET, then (in-package stumpwm)."))
(swank)

#+END_SRC
